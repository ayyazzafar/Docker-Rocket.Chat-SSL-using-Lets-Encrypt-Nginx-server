version: '2'

services:

  rocketchat:
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://www.domainname.com:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com

    container_name: rocketChat
    depends_on:
      - mongo
    ports:
      - 3000:3000
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: www.domainname.com"

  mongo:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:3.2
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    labels:
      - "traefik.enable=false"
    volumes:
      - ./scripts:/home/hubot/scripts
  # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    ports:
      - 3001:8080




  ngnix:
    image: linuxserver/letsencrypt
    ports:
      - 80:80
      - 443:443
    volumes:
      # used to have a copy of config on the DOCKER HOST, can mod from there
      - ./nginx/config:/config
      # the actual configuration file to use for the reverse proxy (located in current repo directory)
      - ./nginx/nginx.conf:/config/nginx/site-confs/default
      # overrides for ssl conf from base image
      - ./nginx/ssl.conf:/config/nginx/ssl.conf
      - ./nginx/dns-conf/digitalocean.ini:/config/dns-conf/digitalocean.ini
    depends_on:
      - rocketchat
    container_name: nginx
    restart: always
    environment:
      - PUID=1000 # get on dockerhost through command "id <user>""
      - PGID=1000
      - EMAIL=yourEmail@gmail.com
      - URL=domainname.com
      - SUBDOMAINS=WWW
      - TZ=America/NewYork
      - VALIDATION=dns # using dns validation
      - DNSPLUGIN=digitalocean # via dnsimple, note there is additional configuration require separate from this file
      - STAGING=false # this should be uncommented when testing for initial success, to avoid some rate limiting
